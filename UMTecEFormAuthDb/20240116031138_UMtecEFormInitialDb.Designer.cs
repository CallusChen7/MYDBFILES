// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UMtecEForm.Models;

#nullable disable

namespace UMtecEForm.Migrations.UMTecEFormAuthDb
{
    [DbContext(typeof(UMTecEFormAuthDbContext))]
    [Migration("20240116031138_UMtecEFormInitialDb")]
    partial class UMtecEFormInitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UMtecEForm.Data.UMtecEFormUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("UMtecEForm.Models.EventRequests", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for Event");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Additional_notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Include any additional information or special requests related to the event");

                    b.Property<string>("Budget_info")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Budget information");

                    b.Property<string>("Contact")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Contact TEL OR EXT");

                    b.Property<DateTime?>("End_date")
                        .HasColumnType("date")
                        .HasComment("Event EndDate");

                    b.Property<string>("Event_No")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Event Number generated after submitted");

                    b.Property<string>("Event_budget")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Provide an estimated budget for the event, including any allocated funds or sponsorship");

                    b.Property<DateTime?>("Event_date")
                        .HasColumnType("date")
                        .HasComment("Event date");

                    b.Property<string>("Event_description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Provide a detailed description of the event, including the agenda or program");

                    b.Property<TimeSpan?>("Event_duration")
                        .HasColumnType("time")
                        .HasComment("Event duration");

                    b.Property<string>("Event_name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Event Name");

                    b.Property<string>("Event_objective")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Briefly describe the purpose and goals of the event");

                    b.Property<string>("Event_promotion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Specify any marketing or promotional activities planned for the event");

                    b.Property<string>("Event_requirements")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Specify any specific equipment, facilities, or resources needed for the event");

                    b.Property<string>("Event_team")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Identify the individuals, departments and association involved in organizing the event");

                    b.Property<TimeSpan?>("Event_time")
                        .HasColumnType("time")
                        .HasComment("Event time");

                    b.Property<string>("Event_venue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Event Venue");

                    b.Property<int?>("Expected_attendees_no")
                        .HasColumnType("int")
                        .HasComment("Expected number of Attendees");

                    b.Property<string>("PI_Faculty")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("PI Faculty");

                    b.Property<string>("PI_Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("PI NAME");

                    b.Property<string>("Previous_event_info")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Specify any previous event information, including venue, number of attendees, etc.");

                    b.Property<DateTime?>("Start_date")
                        .HasColumnType("date")
                        .HasComment("Event StartDate");

                    b.HasKey("Id")
                        .HasName("PK__Event_Re__3214EC07857F4894");

                    b.ToTable("EventRequests");
                });

            modelBuilder.Entity("UMtecEForm.Models.ExchangeRateDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for Exchange Rate details");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(12,2)")
                        .HasComment("Amount in MOP");

                    b.Property<string>("Currency_amount")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Currency and amount")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Exchange_rate")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Exchange rate")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<DateTime?>("Invoice_receipt_date")
                        .HasColumnType("date")
                        .HasComment("Invoice or receipt date");

                    b.Property<string>("Invoice_receipt_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Invoice or receipt number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Reimbursement_id")
                        .HasColumnType("int")
                        .HasComment("Reference key");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Remark")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__Exchange__3214EC072F4CF62F");

                    b.HasIndex("Reimbursement_id");

                    b.ToTable("ExchangeRateDetails");
                });

            modelBuilder.Entity("UMtecEForm.Models.ItemQuotations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for quotations of proposals items");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Amount")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComment("Amount in MOP")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Company_name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Company name of quotation")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Item_id")
                        .HasColumnType("int")
                        .HasComment("Reference key to item");

                    b.HasKey("Id")
                        .HasName("PK__Quotatio__3214EC07D7D46E53");

                    b.HasIndex("Item_id");

                    b.ToTable("ItemQuotations");
                });

            modelBuilder.Entity("UMtecEForm.Models.Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for items");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Award_amount")
                        .HasColumnType("int")
                        .HasComment("Award amount in MOP");

                    b.Property<string>("Awardee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("who gives the award")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Budget_line")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Description of goods and/or services to be acquired")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Exemption")
                        .HasColumnType("int")
                        .HasComment("1 for have Exemption 0 for not have");

                    b.Property<string>("Justification")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Justifications of the award")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Justification_further")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("further justification under exemption")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Proposal_id")
                        .HasColumnType("int")
                        .HasComment("Reference key to proposal");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasComment("Quantity ");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Reasons of making the acquistion")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__Items__3214EC07A9F56075");

                    b.HasIndex("Proposal_id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("UMtecEForm.Models.LocalAutoPayInfos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for Local payment info autopay");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Attachment_info")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Attachment info maybe number or sth")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Attachment_ref")
                        .HasColumnType("int")
                        .HasComment("1 for refer to email 0 for not");

                    b.Property<string>("Bank_account_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Bank account number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Bank_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Bank Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Beneficiary_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Beneficiary Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Contact_number")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Contact's phone number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Email address")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Email_ref")
                        .HasColumnType("int")
                        .HasComment("1 for refer to email 0 for not");

                    b.Property<int?>("Reimbursement_id")
                        .HasColumnType("int")
                        .HasComment("Reference key");

                    b.Property<string>("Tax_id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Tax ID")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__LocalAut__3214EC07F8DB133A");

                    b.HasIndex("Reimbursement_id");

                    b.ToTable("LocalAutoPayInfos");
                });

            modelBuilder.Entity("UMtecEForm.Models.LocalChequeCashiers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for Local payment info autopay");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Attachment_info")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Attachment info")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Attachment_ref")
                        .HasColumnType("int")
                        .HasComment("1 for refer to attachment 0 for not");

                    b.Property<string>("Beneficiary_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Beneficiary Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Contact_number")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Contact's phone number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Email address")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Email_ref")
                        .HasColumnType("int")
                        .HasComment("1 for refer to email 0 for not");

                    b.Property<int?>("Reimbursement_id")
                        .HasColumnType("int")
                        .HasComment("Reference key");

                    b.Property<string>("Tax_id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Tax ID")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__LocalAut__3214EC07F8DB133A_copy1");

                    b.HasIndex("Reimbursement_id");

                    b.ToTable("LocalChequeCashiers");
                });

            modelBuilder.Entity("UMtecEForm.Models.MealQuotations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for quotations of proposals items");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Amount")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasComment("Amount in MOP")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Company_name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Company name of quotation")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Meal_id")
                        .HasColumnType("int")
                        .HasComment("Reference key to item");

                    b.HasKey("Id")
                        .HasName("PK__Quotatio__3214EC07D7D46E53_copy1");

                    b.HasIndex("Meal_id");

                    b.ToTable("MealQuotations");
                });

            modelBuilder.Entity("UMtecEForm.Models.Meals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for items");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Award_amount")
                        .HasColumnType("int")
                        .HasComment("Award amount in MOP");

                    b.Property<string>("Awardee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("who gives the award")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date")
                        .HasComment("date of meal");

                    b.Property<int?>("Estimated_no")
                        .HasColumnType("int");

                    b.Property<int?>("Exemption")
                        .HasColumnType("int")
                        .HasComment("1 for have Exemption 0 for not have");

                    b.Property<string>("Justification")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Justifications of the award")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Justification_further")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("further justification under exemption")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Proposal_id")
                        .HasColumnType("int")
                        .HasComment("Reference key to Proposal");

                    b.Property<string>("Proposed_budget")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Proposed budget")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Purpose")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("Purpose of goods and/or services to be acquired")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__Items__3214EC07A9F56075_copy1");

                    b.HasIndex("Proposal_id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("UMtecEForm.Models.NonLocalBankDrafts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key to Nonlocal Band draft");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Attachment_info")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Attachemtn info")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Attachment_ref")
                        .HasColumnType("int")
                        .HasComment("Attachment ref 1 for have");

                    b.Property<string>("Beneficiary_bank_city")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("City of beneficiary bank")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Beneficiary_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Beneficiary Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Contact_number")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Contact number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Designated_currency")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Designated Currency")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Email_address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Email address")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Email_ref")
                        .HasColumnType("int")
                        .HasComment("1 for ref to email");

                    b.Property<string>("Id_passport_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Id or passport number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Mailing_address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Mailing address")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Reimbursement_id")
                        .HasColumnType("int")
                        .HasComment("Reference key");

                    b.HasKey("Id")
                        .HasName("PK__NonLocal__3214EC07F72877F0");

                    b.HasIndex("Reimbursement_id");

                    b.ToTable("NonLocalBankDrafts");
                });

            modelBuilder.Entity("UMtecEForm.Models.NonLocalTelegraphicTransfers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for NonLocalTelegraphicTransferInfos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ABA_routing_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("APA routing no for USA")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Attachment_info")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Attachment info")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Attachment_ref")
                        .HasColumnType("int")
                        .HasComment("1 for ref to attachment");

                    b.Property<string>("BSB_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("BSB number for Australia")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Bank_account_number")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Bank account number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Bank_address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Bank address or Branch District")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Bank_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Bank name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Beneficiary_home_address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Beneficiary home address for Canada")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Beneficiary_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Beneficiary Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Contact_number")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Contact number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Designated_currency")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Designated Currency")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Email_address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Contact email address")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Email_ref")
                        .HasColumnType("int")
                        .HasComment("1 for ref to email");

                    b.Property<string>("IBAN")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("IBAN for Europe")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("ID_passport_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("ID or Passport number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Reimbursement_id")
                        .HasColumnType("int")
                        .HasComment("Reference key");

                    b.Property<string>("Swift_code")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Swift Code 8 to 11 digits")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__NonLocal__3214EC07D0617736");

                    b.HasIndex("Reimbursement_id");

                    b.ToTable("NonLocalTelegraphicTransfers");
                });

            modelBuilder.Entity("UMtecEForm.Models.PaymentDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for Reimbursement details");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(12,2)")
                        .HasComment("Amount");

                    b.Property<string>("Bank_account_no")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasComment("Bank account number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Bank_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Bank name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Currency")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Currency type")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Documents_no")
                        .HasColumnType("int")
                        .HasComment("number of documents attached");

                    b.Property<string>("Item_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Item name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Payee_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Payee's name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Reimbursement_id")
                        .HasColumnType("int")
                        .HasComment("Rerference key");

                    b.HasKey("Id")
                        .HasName("PK__Payment___3214EC074277448B");

                    b.HasIndex("Reimbursement_id");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRACompanyOperationExpenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for project expenditure");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Budget_line")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Budget line")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Proposal_id")
                        .HasColumnType("int")
                        .HasComment("Reference key to PRAproposals");

                    b.Property<string>("Proposal_ref_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project or reference number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Total_amount_reserved")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Total amount to be reserved")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__ProjectE__3214EC076594619C_copy1");

                    b.HasIndex("Proposal_id");

                    b.ToTable("PRACompanyOperationExpenses");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRAProjectExpenditures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for project expenditure");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Budget_line")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Budget line")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Project_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Project_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Proposal_id")
                        .HasColumnType("int")
                        .HasComment("Reference key to PRAproposals");

                    b.Property<string>("Proposal_ref_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project or reference number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Total_amount_reserved")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Total amount to be reserved")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__ProjectE__3214EC076594619C");

                    b.HasIndex("Proposal_id");

                    b.ToTable("PRAProjectExpenditures");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRAProposals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key of application form");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Approved_date")
                        .HasColumnType("date")
                        .HasComment("When Approved");

                    b.Property<int?>("Approved_proposal")
                        .HasColumnType("int")
                        .HasComment("Approved proposal (must be attached for project expenditure) 1 for have 0 for not");

                    b.Property<string>("Contact_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Requester Contact Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Endorse_email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Endorsement Email")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Endorse_pname")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasComment("Endorsement print name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<bool?>("Has_approved_proposal")
                        .HasColumnType("bit")
                        .HasComment("1 for have 0 for not");

                    b.Property<bool?>("Has_other_info")
                        .HasColumnType("bit")
                        .HasComment("1 for have 0 for not");

                    b.Property<bool?>("Has_participants_list")
                        .HasColumnType("bit")
                        .HasComment("1 for have 0 for not");

                    b.Property<int?>("Last_modified_by")
                        .HasColumnType("int")
                        .HasComment("Last_modified by account");

                    b.Property<DateTime?>("Last_modified_time")
                        .HasColumnType("datetime2")
                        .HasComment("When Last modified");

                    b.Property<int?>("Other_info")
                        .HasColumnType("int")
                        .HasComment("Other relavent information 1 for have 0 for not have.");

                    b.Property<string>("PR_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("PR no ")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Project_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project no")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Quotation")
                        .HasColumnType("int")
                        .HasComment("Quotations from the suppliers 1 for have 0 for not");

                    b.Property<string>("Requester_email")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasComment("Requester email")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Requester_name")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasComment("Requester Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Requester_pname")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasComment("Requester Print Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("status if in progress, ")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__PRAPropo__3214EC07F5E6D9C9");

                    b.ToTable("PRAProposals");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRASCompanyOperationExpenses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for project expenditure");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Budget_line")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Budget line")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Proposal_id")
                        .HasColumnType("int")
                        .HasComment("Reference key to PRAproposals");

                    b.Property<string>("Proposal_ref_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project or reference number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Total_amount_reserved")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Total amount to be reserved")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__ProjectE__3214EC076594619C_copy1_copy1");

                    b.HasIndex("Proposal_id");

                    b.ToTable("PRASCompanyOperationExpenses");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRASProjectExpenditures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for project expenditure");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Budget_line")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Budget line")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Project_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Project_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Proposal_id")
                        .HasColumnType("int")
                        .HasComment("Reference key to PRAproposals");

                    b.Property<string>("Proposal_ref_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project or reference number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Total_amount_reserved")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Total amount to be reserved")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__ProjectE__3214EC076594619C_copy2");

                    b.HasIndex("Proposal_id");

                    b.ToTable("PRASProjectExpenditures");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRAsubProposals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key of application form");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Approved_date")
                        .HasColumnType("date")
                        .HasComment("when approved");

                    b.Property<int?>("Approved_proposal")
                        .HasColumnType("int")
                        .HasComment("Approved proposal (must be attached for project expenditure) 1 for have 0 for not");

                    b.Property<string>("Contact_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Requester Contact Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Endorse_email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Endorsement Email")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Endorse_pname")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasComment("Endorsement print name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<bool?>("Has_approved_proposal")
                        .HasColumnType("bit")
                        .HasComment("0 for not 1 for yes");

                    b.Property<bool?>("Has_other_info")
                        .HasColumnType("bit")
                        .HasComment("0 for not 1 for yes");

                    b.Property<bool?>("Has_participants_list")
                        .HasColumnType("bit")
                        .HasComment("0 for not 1 for yes");

                    b.Property<int?>("Last_modified_by")
                        .HasColumnType("int")
                        .HasComment("Last_modified by account");

                    b.Property<DateTime?>("Last_modified_time")
                        .HasColumnType("datetime2")
                        .HasComment("When Last modified");

                    b.Property<int?>("Other_info")
                        .HasColumnType("int")
                        .HasComment("Other relavent information 1 for have 0 for not have.");

                    b.Property<string>("PR_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("PR no ")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Project_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project no")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Quotation")
                        .HasColumnType("int")
                        .HasComment("Quotations from the suppliers 1 for have 0 for not");

                    b.Property<string>("Requester_email")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasComment("Requester email")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Requester_name")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasComment("Requester Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Requester_pname")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasComment("Requester Print Name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("status if in progress, ")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__PRAPropo__3214EC07F5E6D9C9_copy1");

                    b.ToTable("PRAsubProposals");
                });

            modelBuilder.Entity("UMtecEForm.Models.Reimbursements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key for Reimbursement");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bank_letter_np")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Bank letter no")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Cheque_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Cheque number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Contact_email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Alternate Contact email")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Contact_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Alternate Contact name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Contact_tel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Alternate Contact tel.")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<DateTime?>("Payment_date")
                        .HasColumnType("date")
                        .HasComment("Payment date");

                    b.Property<string>("Project_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Project_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Project number")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Proposal_ref_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Proposal or reference no")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Ref_no")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Reference no")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Requester_email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Requester email")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Requester_name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Requesters name")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<string>("Requester_tel")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("requester tel or ext")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.HasKey("Id")
                        .HasName("PK__Reimburs__3214EC0751390598");

                    b.ToTable("Reimbursements");
                });

            modelBuilder.Entity("UMtecEForm.Models.ReimbursementTotals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Id for reimbursement total");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(12,2)")
                        .HasComment("Reimbursement Amount ");

                    b.Property<string>("Currency")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("Currency type of reimbursement total")
                        .UseCollation("Chinese_PRC_CI_AS");

                    b.Property<int?>("Reimbursement_id")
                        .HasColumnType("int")
                        .HasComment("Reference key to reimbursement");

                    b.HasKey("Id")
                        .HasName("PK__Reimburs__3214EC07214DE23E");

                    b.HasIndex("Reimbursement_id");

                    b.ToTable("ReimbursementTotals");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("UMtecEForm.Data.UMtecEFormUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("UMtecEForm.Data.UMtecEFormUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UMtecEForm.Data.UMtecEFormUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("UMtecEForm.Data.UMtecEFormUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UMtecEForm.Models.ExchangeRateDetails", b =>
                {
                    b.HasOne("UMtecEForm.Models.Reimbursements", "Reimbursement")
                        .WithMany("ExchangeRateDetails")
                        .HasForeignKey("Reimbursement_id")
                        .HasConstraintName("FK__ExchangeR__Reimb__66603565");

                    b.Navigation("Reimbursement");
                });

            modelBuilder.Entity("UMtecEForm.Models.ItemQuotations", b =>
                {
                    b.HasOne("UMtecEForm.Models.Items", "Item")
                        .WithMany("ItemQuotations")
                        .HasForeignKey("Item_id")
                        .HasConstraintName("FK__ItemQuota__Item___5CD6CB2B");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("UMtecEForm.Models.Items", b =>
                {
                    b.HasOne("UMtecEForm.Models.PRAProposals", "Proposal")
                        .WithMany("Items")
                        .HasForeignKey("Proposal_id")
                        .HasConstraintName("FK__Items__Proposal___5AEE82B9");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("UMtecEForm.Models.LocalAutoPayInfos", b =>
                {
                    b.HasOne("UMtecEForm.Models.Reimbursements", "Reimbursement")
                        .WithMany("LocalAutoPayInfos")
                        .HasForeignKey("Reimbursement_id")
                        .HasConstraintName("FK__LocalAuto__Reimb__6477ECF3");

                    b.Navigation("Reimbursement");
                });

            modelBuilder.Entity("UMtecEForm.Models.LocalChequeCashiers", b =>
                {
                    b.HasOne("UMtecEForm.Models.Reimbursements", "Reimbursement")
                        .WithMany("LocalChequeCashiers")
                        .HasForeignKey("Reimbursement_id")
                        .HasConstraintName("FK__LocalCheq__Reimb__656C112C");

                    b.Navigation("Reimbursement");
                });

            modelBuilder.Entity("UMtecEForm.Models.MealQuotations", b =>
                {
                    b.HasOne("UMtecEForm.Models.Meals", "Meal")
                        .WithMany("MealQuotations")
                        .HasForeignKey("Meal_id")
                        .HasConstraintName("FK__MealQuota__Meal___5FB337D6");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("UMtecEForm.Models.Meals", b =>
                {
                    b.HasOne("UMtecEForm.Models.PRAsubProposals", "Proposal")
                        .WithMany("Meals")
                        .HasForeignKey("Proposal_id")
                        .HasConstraintName("FK__Meals__Proposal___5EBF139D");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("UMtecEForm.Models.NonLocalBankDrafts", b =>
                {
                    b.HasOne("UMtecEForm.Models.Reimbursements", "Reimbursement")
                        .WithMany("NonLocalBankDrafts")
                        .HasForeignKey("Reimbursement_id")
                        .HasConstraintName("FK__NonLocalB__Reimb__6383C8BA");

                    b.Navigation("Reimbursement");
                });

            modelBuilder.Entity("UMtecEForm.Models.NonLocalTelegraphicTransfers", b =>
                {
                    b.HasOne("UMtecEForm.Models.Reimbursements", "Reimbursement")
                        .WithMany("NonLocalTelegraphicTransfers")
                        .HasForeignKey("Reimbursement_id")
                        .HasConstraintName("FK__NonLocalT__Reimb__6754599E");

                    b.Navigation("Reimbursement");
                });

            modelBuilder.Entity("UMtecEForm.Models.PaymentDetails", b =>
                {
                    b.HasOne("UMtecEForm.Models.Reimbursements", "Reimbursement")
                        .WithMany("PaymentDetails")
                        .HasForeignKey("Reimbursement_id")
                        .HasConstraintName("FK__PaymentDe__Reimb__68487DD7");

                    b.Navigation("Reimbursement");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRACompanyOperationExpenses", b =>
                {
                    b.HasOne("UMtecEForm.Models.PRAProposals", "Proposal")
                        .WithMany("PRACompanyOperationExpenses")
                        .HasForeignKey("Proposal_id")
                        .HasConstraintName("FK__PRACompan__Propo__5BE2A6F2");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRAProjectExpenditures", b =>
                {
                    b.HasOne("UMtecEForm.Models.PRAProposals", "Proposal")
                        .WithMany("PRAProjectExpenditures")
                        .HasForeignKey("Proposal_id")
                        .HasConstraintName("FK__PRAProjec__Propo__5DCAEF64");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRASCompanyOperationExpenses", b =>
                {
                    b.HasOne("UMtecEForm.Models.PRAsubProposals", "Proposal")
                        .WithMany("PRASCompanyOperationExpenses")
                        .HasForeignKey("Proposal_id")
                        .HasConstraintName("FK__PRASCompa__Propo__60A75C0F");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRASProjectExpenditures", b =>
                {
                    b.HasOne("UMtecEForm.Models.PRAsubProposals", "Proposal")
                        .WithMany("PRASProjectExpenditures")
                        .HasForeignKey("Proposal_id")
                        .HasConstraintName("FK__PRASProje__Propo__619B8048");

                    b.Navigation("Proposal");
                });

            modelBuilder.Entity("UMtecEForm.Models.ReimbursementTotals", b =>
                {
                    b.HasOne("UMtecEForm.Models.Reimbursements", "Reimbursement")
                        .WithMany("ReimbursementTotals")
                        .HasForeignKey("Reimbursement_id")
                        .HasConstraintName("FK__Reimburse__Reimb__628FA481");

                    b.Navigation("Reimbursement");
                });

            modelBuilder.Entity("UMtecEForm.Models.Items", b =>
                {
                    b.Navigation("ItemQuotations");
                });

            modelBuilder.Entity("UMtecEForm.Models.Meals", b =>
                {
                    b.Navigation("MealQuotations");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRAProposals", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("PRACompanyOperationExpenses");

                    b.Navigation("PRAProjectExpenditures");
                });

            modelBuilder.Entity("UMtecEForm.Models.PRAsubProposals", b =>
                {
                    b.Navigation("Meals");

                    b.Navigation("PRASCompanyOperationExpenses");

                    b.Navigation("PRASProjectExpenditures");
                });

            modelBuilder.Entity("UMtecEForm.Models.Reimbursements", b =>
                {
                    b.Navigation("ExchangeRateDetails");

                    b.Navigation("LocalAutoPayInfos");

                    b.Navigation("LocalChequeCashiers");

                    b.Navigation("NonLocalBankDrafts");

                    b.Navigation("NonLocalTelegraphicTransfers");

                    b.Navigation("PaymentDetails");

                    b.Navigation("ReimbursementTotals");
                });
#pragma warning restore 612, 618
        }
    }
}
